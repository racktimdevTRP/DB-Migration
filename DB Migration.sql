  CREATE TABLE "ALL_OBJECT_DDL" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"OBJECT_NAME" VARCHAR2(1000 CHAR), 
	"OBJECT_TYPE" VARCHAR2(1000 CHAR), 
	"OBJECT_DDL" CLOB, 
	"IS_CREATED" VARCHAR2(100 CHAR) DEFAULT 'N', 
	"CREATE_MANUALLY" VARCHAR2(10), 
	 CONSTRAINT "ALL_OBJECT_DDL_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   ) ;



     CREATE TABLE "ALL_TABLE_DML" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"TABLE_NAME" VARCHAR2(1000 CHAR), 
	"TABLE_DML" CLOB, 
	"IS_INSERTED" VARCHAR2(100 CHAR) DEFAULT 'N', 
	"CREATED_AT" TIMESTAMP (6) DEFAULT current_timestamp, 
	"CREATED_BY" VARCHAR2(1000 CHAR) DEFAULT SYS_CONTEXT('APEX$SESSION','APP_USER'), 
	"UPDATED_BY" VARCHAR2(1000 CHAR), 
	"UPDATED_AT" TIMESTAMP (6), 
	 CONSTRAINT "ALL_TABLE_DML_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   ) ;


  CREATE TABLE "ALL_DML_TABLE_LOGS" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"OBJECT_NAME" VARCHAR2(1000 CHAR), 
	"LOGS" CLOB, 
	"IS_FROM_DDL" VARCHAR2(10), 
	 CONSTRAINT "ALL_DML_TABLE_LOGS_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   ) ;


create or replace PROCEDURE SP_DDL_MIGRATION_SCRIPT
(
    p_table_name IN varchar2 default null
)
IS
    v_error_log clob;
BEGIN
    FOR TBL_DDL IN(
        SELECT ID, OBJECT_DDL, OBJECT_NAME FROM ALL_OBJECT_DDL 
        WHERE CREATE_MANUALLY !='Y' AND IS_CREATED = 'N' 
        AND (p_table_name IS NULL OR OBJECT_NAME = p_table_name)
    )
    LOOP
        BEGIN
            EXECUTE IMMEDIATE TBL_DDL.OBJECT_DDL;

            UPDATE ALL_OBJECT_DDL SET IS_CREATED = 'Y' WHERE ID = TBL_DDL.ID;
        EXCEPTION WHEN OTHERS
            THEN
                v_error_log := 'Error for id '|| TBL_DDL.ID || ' : '|| SQLERRM;

                INSERT INTO ALL_DML_TABLE_LOGS(OBJECT_NAME,LOGS,IS_FROM_DDL)
                VALUES(TBL_DDL.OBJECT_NAME, v_error_log,'From DDL');
        END;
    END LOOP; 
end;
/






create or replace PROCEDURE SP_DML_MIGRATION_SCRIPT
(
    p_table_name IN varchar2 default null
)
IS
    v_error_log clob;
BEGIN
    FOR TBL_DML IN(SELECT ID, TABLE_DML, TABLE_NAME FROM ALL_TABLE_DML WHERE (p_table_name IS NULL OR TABLE_NAME = p_table_name))
    LOOP
        BEGIN
            EXECUTE IMMEDIATE TBL_DML.TABLE_DML;

            UPDATE ALL_TABLE_DML SET IS_INSERTED = 'Y' WHERE ID = TBL_DML.ID;
        EXCEPTION WHEN OTHERS
            THEN
                v_error_log := 'Error for id '|| TBL_DML.ID || ' : '|| SQLERRM;

                INSERT INTO ALL_DML_TABLE_LOGS(OBJECT_NAME,LOGS,IS_FROM_DDL)
                VALUES(TBL_DML.TABLE_NAME, v_error_log,'From DML');
        END;
    END LOOP; 
end;
/